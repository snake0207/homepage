{"pageProps":{"slug":"elements","data":{"frontmatter":{"title":"Elements","draft":false},"content":"\r\n#### Heading example\r\n\r\nHere is an example of headings. You can use this heading by the following markdown rules. For example: use `#` for heading 1 and use `######` for heading 6.\r\n\r\n# Heading 1\r\n\r\n## Heading 2\r\n\r\n### Heading 3\r\n\r\n#### Heading 4\r\n\r\n##### Heading 5\r\n\r\n###### Heading 6\r\n\r\n---\r\n\r\n### Emphasis\r\n\r\nThe emphasis, aka italics, with _asterisks_ or _underscores_.\r\n\r\nStrong emphasis, aka bold, with **asterisks** or **underscores**.\r\n\r\nThe combined emphasis with **asterisks and _underscores_**.\r\n\r\nStrikethrough uses two tildes. ~~Scratch this.~~\r\n\r\n---\r\n\r\n### Link\r\n\r\n[I'm an inline-style link](https://www.google.com)\r\n\r\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\r\n\r\n[I'm a reference-style link][arbitrary case-insensitive reference text]\r\n\r\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\r\n\r\n[You can use numbers for reference-style link definitions][1]\r\n\r\nOr leave it empty and use the [link text itself].\r\n\r\nexample.com (but not on Github, for example).\r\n\r\nSome text to show that the reference links can follow later.\r\n\r\n[arbitrary case-insensitive reference text]: https://www.themefisher.com\r\n[1]: https://gethugothemes.com\r\n[link text itself]: https://www.getjekyllthemes.com\r\n\r\n---\r\n\r\n### Paragraph\r\n\r\nLorem ipsum dolor sit amet consectetur adipisicing elit. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a! Velit impedit atque maiores animi possimus asperiores natus repellendus excepturi sint architecto eligendi non, omnis nihil. Facilis, doloremque illum. Fugit optio laborum minus debitis natus illo perspiciatis corporis voluptatum rerum laboriosam.\r\n\r\n---\r\n\r\n### Ordered List\r\n\r\n1. List item\r\n2. List item\r\n3. List item\r\n4. List item\r\n5. List item\r\n\r\n---\r\n\r\n### Unordered List\r\n\r\n- List item\r\n- List item\r\n- List item\r\n- List item\r\n- List item\r\n\r\n---\r\n\r\n### Code and Syntax Highlighting\r\n\r\nThis is an `Inline code` sample.\r\n\r\n```javascript\r\nvar s = \"JavaScript syntax highlighting\";\r\nalert(s);\r\n```\r\n\r\n```python\r\ns = \"Python syntax highlighting\"\r\nprint s\r\n```\r\n\r\n---\r\n\r\n### Blockquote\r\n\r\n> This is a blockquote example.\r\n\r\n---\r\n\r\n### Inline HTML\r\n\r\nYou can also use raw HTML in your Markdown, and it'll mostly work pretty well.\r\n\r\n<dl>\r\n  <dt>Definition list</dt>\r\n  <dd>Is something people use sometimes.</dd>\r\n\r\n  <dt>Markdown in HTML</dt>\r\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\r\n</dl>\r\n\r\n---\r\n\r\n### Tables\r\n\r\n| Tables        |      Are      |  Cool |\r\n| ------------- | :-----------: | ----: |\r\n| col 3 is      | right-aligned | $1600 |\r\n| col 2 is      |   centered    |   $12 |\r\n| zebra stripes |   are neat    |    $1 |\r\n\r\nThere must be at least 3 dashes separating each header cell.\r\nThe outer pipes (|) are optional, and you don't need to make the\r\nraw Markdown line up prettily. You can also use inline Markdown.\r\n\r\n| Markdown | Less      | Pretty     |\r\n| -------- | --------- | ---------- |\r\n| _Still_  | `renders` | **nicely** |\r\n| 1        | 2         | 3          |\r\n","mdxContent":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h4: \"h4\",\n    p: \"p\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h5: \"h5\",\n    h6: \"h6\",\n    hr: \"hr\",\n    em: \"em\",\n    strong: \"strong\",\n    del: \"del\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    pre: \"pre\",\n    blockquote: \"blockquote\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h4, {\n      id: \"heading-example\",\n      children: \"Heading example\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here is an example of headings. You can use this heading by the following markdown rules. For example: use \", _jsx(_components.code, {\n        children: \"#\"\n      }), \" for heading 1 and use \", _jsx(_components.code, {\n        children: \"######\"\n      }), \" for heading 6.\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"heading-1\",\n      children: \"Heading 1\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"heading-2\",\n      children: \"Heading 2\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"heading-3\",\n      children: \"Heading 3\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"heading-4\",\n      children: \"Heading 4\"\n    }), \"\\n\", _jsx(_components.h5, {\n      id: \"heading-5\",\n      children: \"Heading 5\"\n    }), \"\\n\", _jsx(_components.h6, {\n      id: \"heading-6\",\n      children: \"Heading 6\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"emphasis\",\n      children: \"Emphasis\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The emphasis, aka italics, with \", _jsx(_components.em, {\n        children: \"asterisks\"\n      }), \" or \", _jsx(_components.em, {\n        children: \"underscores\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Strong emphasis, aka bold, with \", _jsx(_components.strong, {\n        children: \"asterisks\"\n      }), \" or \", _jsx(_components.strong, {\n        children: \"underscores\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The combined emphasis with \", _jsxs(_components.strong, {\n        children: [\"asterisks and \", _jsx(_components.em, {\n          children: \"underscores\"\n        })]\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Strikethrough uses two tildes. \", _jsx(_components.del, {\n        children: \"Scratch this.\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"link\",\n      children: \"Link\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.google.com\",\n        children: \"I'm an inline-style link\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.google.com\",\n        title: \"Google's Homepage\",\n        children: \"I'm an inline-style link with title\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.themefisher.com\",\n        children: \"I'm a reference-style link\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"../blob/master/LICENSE\",\n        children: \"I'm a relative reference to a repository file\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://gethugothemes.com\",\n        children: \"You can use numbers for reference-style link definitions\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Or leave it empty and use the \", _jsx(_components.a, {\n        href: \"https://www.getjekyllthemes.com\",\n        children: \"link text itself\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"example.com (but not on Github, for example).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some text to show that the reference links can follow later.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"paragraph\",\n      children: \"Paragraph\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a! Velit impedit atque maiores animi possimus asperiores natus repellendus excepturi sint architecto eligendi non, omnis nihil. Facilis, doloremque illum. Fugit optio laborum minus debitis natus illo perspiciatis corporis voluptatum rerum laboriosam.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"ordered-list\",\n      children: \"Ordered List\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"unordered-list\",\n      children: \"Unordered List\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"List item\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"code-and-syntax-highlighting\",\n      children: \"Code and Syntax Highlighting\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This is an \", _jsx(_components.code, {\n        children: \"Inline code\"\n      }), \" sample.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript\",\n        children: \"var s = \\\"JavaScript syntax highlighting\\\";\\r\\nalert(s);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-python\",\n        children: \"s = \\\"Python syntax highlighting\\\"\\r\\nprint s\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"blockquote\",\n      children: \"Blockquote\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"This is a blockquote example.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"inline-html\",\n      children: \"Inline HTML\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can also use raw HTML in your Markdown, and it'll mostly work pretty well.\"\n    }), \"\\n\", _jsxs(\"dl\", {\n      children: [_jsx(\"dt\", {\n        children: \"Definition list\"\n      }), _jsx(\"dd\", {\n        children: \"Is something people use sometimes.\"\n      }), _jsx(\"dt\", {\n        children: \"Markdown in HTML\"\n      }), _jsxs(\"dd\", {\n        children: [\"Does \", _jsx(_components.em, {\n          children: \"not\"\n        }), \" work \", _jsx(_components.strong, {\n          children: \"very\"\n        }), \" well. Use HTML \", _jsx(\"em\", {\n          children: \"tags\"\n        }), \".\"]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"tables\",\n      children: \"Tables\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Tables\"\n          }), _jsx(_components.th, {\n            align: \"center\",\n            children: \"Are\"\n          }), _jsx(_components.th, {\n            align: \"right\",\n            children: \"Cool\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"col 3 is\"\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: \"right-aligned\"\n          }), _jsx(_components.td, {\n            align: \"right\",\n            children: \"$1600\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"col 2 is\"\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: \"centered\"\n          }), _jsx(_components.td, {\n            align: \"right\",\n            children: \"$12\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"zebra stripes\"\n          }), _jsx(_components.td, {\n            align: \"center\",\n            children: \"are neat\"\n          }), _jsx(_components.td, {\n            align: \"right\",\n            children: \"$1\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There must be at least 3 dashes separating each header cell.\\r\\nThe outer pipes (|) are optional, and you don't need to make the\\r\\nraw Markdown line up prettily. You can also use inline Markdown.\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Markdown\"\n          }), _jsx(_components.th, {\n            children: \"Less\"\n          }), _jsx(_components.th, {\n            children: \"Pretty\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.em, {\n              children: \"Still\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"renders\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"nicely\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"1\"\n          }), _jsx(_components.td, {\n            children: \"2\"\n          }), _jsx(_components.td, {\n            children: \"3\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"__N_SSG":true}